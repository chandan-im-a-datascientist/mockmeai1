app MockMeAI {
  wasp: {
    version: "^0.11.1"
  },
  title: "MockMeAI",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  interviews Interview[]
psl=}

entity Interview {=psl
  id             Int        @id @default(autoincrement())
  questions      Question[]
  user           User       @relation(fields: [userId], references: [id])
  userId         Int
  responses      Response[]
  score          Float
  jobDescription String
  jobRole        String
  resume         String
psl=}

entity Question {=psl
  id             Int       @id @default(autoincrement())
  text           String
  expectedAnswer String
  interviewId    Int
  Interview      Interview @relation(fields: [interviewId], references: [id])
psl=}

entity Response {=psl
  id           Int       @id @default(autoincrement())
  responseText String
  interview    Interview @relation(fields: [interviewId], references: [id])
  interviewId  Int
psl=}

action createInterviewFromResumeAndJobRole {
  fn: import { createInterviewFromResumeAndJobRole } from "@server/actions.js",
  entities: [Interview]
}

action transcribeResponseAndCompare {
  fn: import { transcribeResponseAndCompare } from "@server/actions.js",
  entities: [Interview, Question, Response]
}

query getInterview {
  fn: import { getInterview } from "@server/queries.js",
  entities: [Interview, User, Question, Response]
}

query getUserInterviews {
  fn: import { getUserInterviews } from "@server/queries.js",
  entities: [User, Interview, Question, Response]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route InterviewRoute { path: "/interview/:interviewId", to: InterviewPage }
page InterviewPage {
  component: import { InterviewPage } from "@client/pages/Interview.jsx",
  authRequired: true
}

route DashboardRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}